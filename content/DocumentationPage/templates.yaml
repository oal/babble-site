title: '5. Templates'
content:
    -
        type: Section
        value:
            title: Introduction
            body: 'Templates are stored in the "templates" directory, and are written using the Twig templating language. Babble differentiates between three types of templates. Please refer to the Routing documentation for details on how URLs are mapped to templates.'
    -
        type: Section
        value:
            title: 'Available classes and variables'
            body: |
                In any template, you have access to a few classes and variables.
                
                ### path (the `Path` class)
                The `path` variable contains information about the current path / URL. It has the following methods:
                
                #### path.is(url)
                Used to check if the current path matches the specified URL. This is often used to highlight the currently active link in a menu.
                
                **Example usage:**
                ```twig
                <a href="{{ this.permalink }}" {% if path.is(this.permalink) %} class="active"{% endif %}>{{ page.title }}</a>
                ```
                
                #### path.isExactly(url)
                Similar to the above, except that it only returns `true` if the given URL matches the current path exactly. `path.is` also matches if it starts with the current path.
                
                #### path.getExtension()
                Template files may specify an extension, as in `Page.html.twig` for when you want to match routes like `about.html`. `path.getExtension()` returns this pseudo-extension. If there is no extension (`Page.twig`) an empty string is returned.
                
                ### this (`Record`)
                When using template names that map directly to models, like if you have a model called `Page`, and a template called `Page.twig`, `this` will automatically get bound to the matching `Page` record.
                
                You can access any of the fields of a record simply by accessing them using dot notation (like `this.title`).
                
                ### abort()
                If `abort()` is called at any time during the page render, Babble will look for another possible match for the current URL. If none is found, a 404 response is returned.
                
                ### Models
                Any valid model can be queried, to retrieve records. If you have a `Page` model, you can do:
                
                ```twig
                {% for page in Page.all() %} ... {% endfor %}
                ```
                
                You can also specify filters, ordering etc. similar to Laravel's ORM.
                
                #### Model.where(field, comparison, value)
                ```js
                Post.where('is_draft', '=', false)
                ```
                Available comparisons are:
                
                - =
                - !=
                - <
                - <=
                - >
                - >=
                
                #### Model.orderBy(field, direction)]
                ```js
                Post.orderBy('published_at', 'desc')
                ```
                
                The `direction` argument can be either `asc` (ascending) or `desc` (descending).
                
    -
        type: Section
        value:
            body: |
                
                
                
                **/templates/_base.twig**
                ```twig
                <html>
                <head>
                    <title>{% block title %}{% endblock %} - {{ Site.title }}</title>
                    <link rel="stylesheet" href="/static/main.css">
                </head>
                <body>
                
                <header id="header">
                    <h2>
                        <a href="/">
                            <img src="/static/logo.svg" alt="{{ Site.title }}">
                        </a>
                    </h2>
                    <nav>
                        <ul>
                            {% for page in Page.all() %}
                                <li>
                                    <a href="{{ page.permalink }}">{{ page.title }}</a>
                                </li>
                            {% endfor %}
                        </ul>
                    </nav>
                </header>
                
                {% block body %}
                {% endblock %}
                
                <footer id="footer">
                    Powered by Babble CMS.
                </footer>
                
                </body>
                </html>
                ```
                
                **/templates/Page.twig**
                ```twig
                {% extends '_base.twig' %}
                
                {% block title %}{{ this.title }}{% endblock %}
                
                {% block body %}
                    <div id="content">
                        <h1>{{ this.title }}</h1>
                        <div>
                            {{ this.body }}
                        </div>
                    </div>
                {% endblock %}
                ```
                
            title: Examples
